<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.0.xsd
						http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="180000" />
	</bean>
	
	<!-- 自定义 shiro -->
	<bean id="riskRealm" class="com.jesse.dpp.rcp.shiro.realm.RiskRealm"/>
	    
	<!-- 配置权限管理器   -->  
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">    
        <!-- ref对应我们写的realm  riskRealm -->  
        <property name="realm" ref="riskRealm"/>    
        <!-- 使用下面配置的缓存管理器 -->  
       <property name="cacheManager" ref="cacheManager"/>
    </bean>  
      
    <!-- 配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致 -->  
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">   
        <!-- 调用我们配置的权限管理器 -->   
        <property name="securityManager" ref="securityManager"/>   
        <!-- 配置我们的登录请求地址 -->   
        <property name="loginUrl" value="/login"/> 
        <!-- 配置我们在登录页登录成功后的跳转地址，如果你访问的是非/login地址，则跳到您访问的地址 -->  
        <!-- 跳转逻辑在controller -->
     	<property name="successUrl" value="/index"/>
        <!-- 如果您请求的资源不再您的权限范围，则跳转到/403请求地址 -->  
        <property name="unauthorizedUrl" value="/403"/>    
        
        <property name="filters">  
            <map>  
                <entry key="roleOrFilter" value-ref="roleOrFilter"/>  
            </map>  
        </property>  
        
        <!-- 权限配置 -->  
        <property name="filterChainDefinitionMap" ref="filterChainDefinitionMap"/>
        
       <!--  <property name="filterChainDefinitions">    
            <value>    
                anon表示此地址不需要任何权限即可访问 
				/css/**=anon
                /fonts/**=anon
                /images/**=anon
                /js/**=anon
                /code = anon
                /login = anon
                /searchFingerPrint = authc,roles[Administrator]
                /fingerPrintParameters = authc,roles[Test1]
                /403.jsp = authc
                所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login  
                /** = authc  
              
          	
            </value>    
        </property>   -->  
    </bean>  
    
    <!-- 自定义 filter -->
    <bean id="roleOrFilter" class="com.jesse.dpp.rcp.shiro.filter.AnyOfRolesAuthorizationFilter" />  
    
    <!-- 缓存管理器 -->
   <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
    
    <!-- Shiro生命周期处理器-->    
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />   
    
 	<!-- 启用 IOC 容器中使用 shiro 的注解. 但必须在配置了 LifecycleBeanPostProcessor 之后才可以使用 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<!-- 配置一个 bean, 该 bean 实际上是一个 Map. 通过实例工厂方法的方式 -->
    <bean id="filterChainDefinitionMap" 
    	factory-bean="filterChainDefinitionMapBuilder" factory-method="buildFilterChainDefinitionMap"></bean>
    
    <bean id="filterChainDefinitionMapBuilder"
    	class="com.jesse.dpp.rcp.shiro.factory.FilterChainDefinitionMap"></bean>
	
</beans>

			
	